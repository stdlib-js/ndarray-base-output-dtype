"use strict";var L=function(n,e){return function(){return e||n((e={exports:{}}).exports,e),e.exports}};var b=L(function(S,P){
var o=require('@stdlib/ndarray-base-assert-is-floating-point-data-type/dist'),c=require('@stdlib/ndarray-base-assert-is-real-floating-point-data-type/dist'),f=require('@stdlib/ndarray-base-assert-is-complex-floating-point-data-type/dist'),v=require('@stdlib/ndarray-base-assert-is-integer-data-type/dist'),d=require('@stdlib/ndarray-base-assert-is-signed-integer-data-type/dist'),g=require('@stdlib/ndarray-base-assert-is-unsigned-integer-data-type/dist'),T=require('@stdlib/ndarray-base-assert-is-real-data-type/dist'),m=require('@stdlib/ndarray-base-assert-is-numeric-data-type/dist'),D=require('@stdlib/ndarray-base-assert-is-boolean-data-type/dist'),x=require('@stdlib/ndarray-base-assert-is-integer-index-data-type/dist'),E=require('@stdlib/ndarray-base-assert-is-boolean-index-data-type/dist'),q=require('@stdlib/ndarray-base-assert-is-mask-index-data-type/dist'),h=require('@stdlib/ndarray-base-assert-is-data-type/dist'),_=require('@stdlib/ndarray-base-promote-dtypes/dist'),t=require('@stdlib/ndarray-defaults/dist'),I=require('@stdlib/array-base-join/dist'),l=require('@stdlib/error-tools-fmtprodmsg/dist'),w=t.get("dtypes.default"),A=t.get("dtypes.default_index"),u=t.get("dtypes.signed_integer"),p=t.get("dtypes.unsigned_integer"),s=t.get("dtypes.real_floating_point"),F={default:U,default_index:Y,same:k,promoted:y,accumulation:G},N={floating_point:[o,t.get("dtypes.floating_point")],floating_point_and_generic:[r(o),t.get("dtypes.floating_point")],real_floating_point:[c,s],real_floating_point_and_generic:[r(c),s],complex_floating_point:[f,t.get("dtypes.complex_floating_point")],complex_floating_point_and_generic:[r(f),t.get("dtypes.complex_floating_point")],integer:[v,t.get("dtypes.integer")],integer_and_generic:[r(v),t.get("dtypes.integer")],signed_integer:[d,u],signed_integer_and_generic:[r(d),u],unsigned_integer:[g,p],unsigned_integer_and_generic:[r(g),p],real:[T,t.get("dtypes.real")],real_and_generic:[r(T),t.get("dtypes.real")],numeric:[m,t.get("dtypes.numeric")],numeric_and_generic:[r(m),t.get("dtypes.numeric")],boolean:[D,t.get("dtypes.boolean")],boolean_and_generic:[r(D),t.get("dtypes.boolean")],integer_index:[x,t.get("dtypes.integer_index")],integer_index_and_generic:[r(x),t.get("dtypes.integer_index")],boolean_index:[E,t.get("dtypes.boolean_index")],boolean_index_and_generic:[r(E),t.get("dtypes.boolean_index")],mask_index:[q,t.get("dtypes.mask_index")],mask_index_and_generic:[r(q),t.get("dtypes.mask_index")]};function r(n){return e;function e(a){return a==="generic"||n(a)}}function U(){return w}function Y(){return A}function k(n){var e,a;for(e=n[0],a=1;a<n.length;a++)if(n[a]!==e)throw new Error(l('invalid argument. Unable to resolve an output data type. The output data type policy is "same" and yet the input data types are not equal. Data types: [%s].',I(n,", ")));return e}function y(n){var e=_(n);if(e===null)throw new Error(l("invalid argument. Unable to apply type promotion rules when resolving a data type to which the input data types can be safely cast. Data types: [%s].",I(n,", ")));return e}function G(n){var e=y(n);return o(e)||e==="generic"?e:g(e)?_([e,p]):d(e)?_([e,u]):s}function R(n,e){var a,i;if(h(e))return e;if(i=F[e],i!==void 0)return i(n);if(a=y(n),i=N[e],i!==void 0)return i[0](a)?a:i[1];throw new TypeError(l('nullDw',e))}P.exports=R
});var B=b();module.exports=B;
/** @license Apache-2.0 */
//# sourceMappingURL=index.js.map
